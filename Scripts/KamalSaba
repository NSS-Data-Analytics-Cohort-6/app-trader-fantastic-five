SELECT DISTINCT a.name as application,
a.price AS app_price,
p.price::money::decimal AS play_price,
a.rating AS app_rating,
p.rating AS play_rating,
p.content_rating,
p.genres as play_genre,
a.primary_genre as app_genre,
round((a.rating+p.rating)/2*2+1,1) as lifespan_years,
(((round((a.rating+p.rating)/2*2+1,0))*12)*5000)-11000 as estimated_revenue
(((round((lifespan_months*5000) - (lifespan_months*1000)+10000 as
total_revenue
FROM app_store_apps AS a
INNER JOIN play_store_apps AS p
	USING (name)
WHERE a.price = p.price::money::decimal and a.price=0 and p.price::money::decimal=0
AND a.name ilike any(array['%pie%','%food%','%pinterest%','%farm%','%jam%','%pizza%','%egg%','%fruit%','%flour%','%recipe%','%dessert%','%cook%','%farm%','%bake%','%PAC-MAN%']) 
AND CAST(a.review_count as decimal) >= 100
AND CAST(p.review_count as decimal) >= 100
AND a.rating >= 3.5 AND p.rating>= 3.5
AND round((a.rating+p.rating)/2*2+1,1) >= 9.5
GROUP BY a.name, a.price, p.price::money::decimal,
a.rating,
p.rating,
p.content_rating,
p.genres,
a.primary_genre,
a.review_count,
p.review_count,
p.install_count
ORDER BY lifespan_years DESC
LIMIT 10;

SELECT DISTINCT a.name as application,
a.price AS app_price,
p.price::money::decimal AS play_price,
a.rating AS app_rating,
p.rating AS play_rating,
p.content_rating,
p.genres as play_genre,
a.primary_genre as app_genre,
round((a.rating+p.rating)/2*2+1,0) as lifespan_years,
(((round((a.rating+p.rating)/2*2+1,0))*12)*5000)-11000 as estimated_revenue,
round((cast(a.review_count as int) + p.review_count)/(p.review_count / (cast(replace(trim(trailing '+' from p.install_count), ',','') as numeric))),0) as estimated_downloads
FROM App_store_apps AS a
	INNER JOIN play_store_apps AS p
	USING (name)
	WHERE a.price = p.price::money::decimal and a.price=0 and p.price::money::decimal=0
	-- how can i get this to not be dumb looking
	-- I solved it i am a genius (aka i used the internet)
	and a.name ilike any(array['%farm%','%pizza%','%egg%','%fruit%','%flour%','%recipe%','%dessert%','%cook%','%farm%','%bake%','%PAC-MAN%'])
AND CAST(a.review_count as decimal) >= 100
AND CAST(p.review_count as decimal) >= 100
AND a.rating >= 3.5 AND p.rating>= 3.5
GROUP BY a.name, a.price, p.price::money::decimal,
a.rating,
p.rating,
p.content_rating,
p.genres,
a.primary_genre,
a.review_count,
p.review_count,
p.install_count
order by lifespan_years DESC;

SELECT
app_store_name,
play_store_name,
app_store_genre,
play_store_genre,
lifespan_years,
lifespan_months,
(lifespan_months*5000) as estimated_revenue,
(lifespan_months*1000)+10000 as estimated_spending,
(lifespan_months*5000) - (lifespan_months*1000)+10000 as
total_revenue
FROM(select
DISTINCT
a.name as app_store_name,
p.name as play_store_name,
a.price as app_price,
p.price::money::decimal as game_price,
a.rating as app_rating,
p.rating as game_rating,
a.primary_genre as app_store_genre,
p.genres as play_store_genre,
round((a.rating+p.rating)/2*2+1,1) as lifespan_years,	
round(((a.rating+p.rating)/2*2+1)*12,1) lifespan_months
from app_store_apps as a
JOIN play_store_apps as p
ON a.name = p.name
WHERE a.price <= 1 AND p.price::money::decimal <= 1
AND CAST(a.review_count as decimal) >=100
AND CAST(p.review_count as decimal) >= 100
AND a.rating >= 3.5 AND p.rating>= 3.5
ORDER BY lifespan_years DESC) as subquery
ORDER BY app_store_genre,play_store_genre
LIMIT 10;


SELECT
app_store_name,
play_store_name,
lifespan_years,
lifespan_months,
(lifespan_months*5000) as estimated_revenue,
(lifespan_months*1000)+10000 as estimated_spending,
(lifespan_months*5000) - (lifespan_months*1000)+10000 as
total_revenue
FROM(select
DISTINCT
a.name as app_store_name,
p.name as play_store_name,
a.price as app_price,
p.price::money::decimal as game_price,
a.rating as app_rating,
p.rating as game_rating,
a.primary_genre as app_store_genre,
p.genres as play_store_genre,
round((a.rating+p.rating)/2*2+1,1) as lifespan_years,	
round(((a.rating+p.rating)/2*2+1)*12,1) lifespan_months
from app_store_apps as a
JOIN play_store_apps as p
ON a.name = p.name
WHERE a.price <= 1 AND p.price::money::decimal <= 1
AND CAST(a.review_count as decimal) >=100
AND CAST(p.review_count as decimal) >= 100
AND a.rating >= 3.5 AND p.rating>= 3.5
ORDER BY lifespan_months DESC, app_store_genre,play_store_genre) as subquery
LIMIT 10;


SELECT
app_store_name,
play_store_name,
app_price,
game_price,
lifespan_years,
lifespan_months,
(lifespan_months*5000) as estimated_revenue,
(lifespan_months*1000)+10000 as estimated_spending,
(lifespan_months*5000) - (lifespan_months*1000)+10000 as
total_revenue
FROM(select
DISTINCT
a.name as app_store_name,
p.name as play_store_name,
a.price as app_price,
p.price::money::decimal as game_price,
a.rating as app_rating,
p.rating as game_rating,
a.primary_genre as app_store_genre,
p.genres as play_store_genre,
round((a.rating+p.rating)/2*2+1,1) as lifespan_years,	
round(((a.rating+p.rating)/2*2+1)*12,1) lifespan_months
from app_store_apps as a
JOIN play_store_apps as p
ON a.name = p.name
WHERE a.price > 1 AND p.price::money::decimal >1
AND CAST(a.review_count as decimal) >=100
AND CAST(p.review_count as decimal) >= 100
AND a.rating >= 3.5 AND p.rating>= 3.5
order by lifespan_months DESC) as subquery
LIMIT 10;






